name: test

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  schedule:
    - cron: "0 10 * * 5" # JST 19:00 (Fri)

env:
  CI: "true"

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        ruby:
          - 2.3
        image:
          - centos:7
          - debian:jessie
          - debian:stretch
          - debian:buster

    steps:
      - uses: actions/checkout@v3

      - uses: eregon/use-ruby-action@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Cache vendor/bundle
        uses: actions/cache@v1
        id: cache_gem
        with:
          path: vendor/bundle
          key: v1-gem-${{ runner.os }}-${{ matrix.ruby }}-${{ github.sha }}
          restore-keys: |
            v1-gem-${{ runner.os }}-${{ matrix.ruby }}-

      - name: bundle update
        run: |
          set -xe
          bundle config path vendor/bundle
          bundle update --jobs $(nproc) --retry 3

      - name: Start container
        run: |
          set -xe

          case "$IMAGE" in
          "debian:stretch" | "debian:buster" )
            docker run --name tmp-debian $IMAGE bash -c "apt-get update && apt-get install -y systemd-sysv"
            docker commit tmp-debian debian-with-systemd
            docker run --privileged -d --name container-with-service debian-with-systemd /sbin/init
            ;;
          *)
            docker run --privileged -d --name container-with-service $IMAGE /sbin/init
            ;;
          esac
        env:
          IMAGE: ${{ matrix.image }}

      - name: Run Itamae
        run: |
          set -xe
          bundle exec itamae docker --node-yaml=recipes/node.yml recipes/install.rb --container=container-with-service --tag itamae-plugin:latest

      - name: Run Serverspec
        run: |
          set -xe
          bundle exec rspec
        env:
          DOCKER_CONTAINER: container-with-service

      - name: Slack Notification (not success)
        uses: lazy-actions/slatify@master
        if: "! success()"
        continue-on-error: true
        with:
          job_name: ${{ format('*build* ({0}, {1})', matrix.ruby, matrix.image) }}
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs:
      - test

    runs-on: ubuntu-latest

    steps:
      - name: Slack Notification (success)
        uses: lazy-actions/slatify@master
        if: always()
        continue-on-error: true
        with:
          job_name: '*build*'
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}
